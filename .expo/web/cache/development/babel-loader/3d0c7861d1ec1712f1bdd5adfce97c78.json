{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ITland\\\\Desktop\\\\native\\\\components\\\\ProfileContainer.js\";\nimport React, { useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Social from \"./Social\";\nimport ProfileTop from \"./ProfileTop\";\nimport ProfileInfo from \"./ProfileInfo\";\nimport List from \"./List\";\n\nfunction ProfileContainer(_ref) {\n  var navigation, _useState, _useState2, login, setLogin, signedIn, checkLogin, clear;\n\n  return _regeneratorRuntime.async(function ProfileContainer$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          navigation = _ref.navigation;\n          _useState = useState(''), _useState2 = _slicedToArray(_useState, 2), login = _useState2[0], setLogin = _useState2[1];\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('number'));\n\n        case 4:\n          signedIn = _context2.sent;\n\n          checkLogin = function checkLogin() {\n            return _regeneratorRuntime.async(function checkLogin$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    if (signedIn) {\n                      setLogin(signedIn);\n                    }\n\n                  case 1:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          };\n\n          clear = function clear() {\n            AsyncStorage.clear();\n            setLogin('');\n          };\n\n          checkLogin();\n          return _context2.abrupt(\"return\", React.createElement(ScrollView, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 3\n            }\n          }, React.createElement(ProfileTop, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 4\n            }\n          }), React.createElement(ProfileInfo, {\n            navigation: navigation,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 4\n            }\n          }), React.createElement(List, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 4\n            }\n          }), React.createElement(Social, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 4\n            }\n          }), React.createElement(Button, {\n            onPress: clear,\n            title: \"Logout\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 4\n            }\n          }), signedIn ? signedIn : React.createElement(Text, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 27\n            }\n          }, \"Not signed in\")));\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, this, null, Promise);\n}\n\nexport default ProfileContainer;","map":{"version":3,"sources":["C:/Users/ITland/Desktop/native/components/ProfileContainer.js"],"names":["React","useState","useEffect","AsyncStorage","Social","ProfileTop","ProfileInfo","List","ProfileContainer","navigation","login","setLogin","getItem","signedIn","checkLogin","clear"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AAGA,OAAOC,MAAP;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,OAAOC,IAAP;;AAEA,SAAeC,gBAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAkCC,UAAAA,UAAlC,QAAkCA,UAAlC;AAAA,sBAC6BR,QAAQ,CAAC,EAAD,CADrC,6CACSS,KADT,kBACgBC,QADhB;AAAA;AAAA,2CAEwBR,YAAY,CAACS,OAAb,CAAqB,QAArB,CAFxB;;AAAA;AAEOC,UAAAA,QAFP;;AAIOC,UAAAA,UAJP,GAIoB,SAAbA,UAAa;AAAA;AAAA;AAAA;AAAA;AAClB,wBAAID,QAAJ,EAAc;AACbF,sBAAAA,QAAQ,CAACE,QAAD,CAAR;AACA;;AAHiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJpB;;AAUOE,UAAAA,KAVP,GAUe,SAARA,KAAQ,GAAM;AACnBZ,YAAAA,YAAY,CAACY,KAAb;AACAJ,YAAAA,QAAQ,CAAC,EAAD,CAAR;AACA,WAbF;;AAeCG,UAAAA,UAAU;AAfX,4CAkBE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAEC,oBAAC,WAAD;AAAa,YAAA,UAAU,EAAEL,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,EAGC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,EAIC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,EAMC,oBAAC,MAAD;AAAQ,YAAA,OAAO,EAAEM,KAAjB;AAAwB,YAAA,KAAK,EAAC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAND,EAOEF,QAAQ,GAAGA,QAAH,GAAc,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAPxB,CAlBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA8BA,eAAeL,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ScrollView, Text, Button } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n// Components\r\nimport Social from './Social';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileInfo from './ProfileInfo';\r\nimport List from './List';\r\n\r\nasync function ProfileContainer({ navigation }) {\r\n\tconst [ login, setLogin ] = useState('');\r\n\tconst signedIn = await AsyncStorage.getItem('number');\r\n\r\n\tconst checkLogin = async () => {\r\n\t\tif (signedIn) {\r\n\t\t\tsetLogin(signedIn);\r\n\t\t}\r\n\t};\r\n\r\n\tconst clear = () => {\r\n\t\tAsyncStorage.clear();\r\n\t\tsetLogin('');\r\n\t};\r\n\r\n\tcheckLogin();\r\n\r\n\treturn (\r\n\t\t<ScrollView>\r\n\t\t\t<ProfileTop />\r\n\t\t\t<ProfileInfo navigation={navigation} />\r\n\t\t\t<List />\r\n\t\t\t<Social />\r\n\t\t\t{/* {login ? <Text>Signed In</Text> : <Text>Not signed in</Text>} */}\r\n\t\t\t<Button onPress={clear} title=\"Logout\" />\r\n\t\t\t{signedIn ? signedIn : <Text>Not signed in</Text>}\r\n\t\t</ScrollView>\r\n\t);\r\n}\r\n\r\nexport default ProfileContainer;\r\n"]},"metadata":{},"sourceType":"module"}